# Generated by Django 5.0.4 on 2024-04-24 00:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HotListModel',
            fields=[
                ('create_time', models.TimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.TimeField(auto_now_add=True, verbose_name='更新时间')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='创建日期')),
                ('update_date', models.DateField(auto_now_add=True, verbose_name='更新日期')),
                ('create_user', models.BigIntegerField(blank=True, help_text='创建者ID', null=True, verbose_name='创建者')),
                ('aid', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('view', models.BigIntegerField(blank=True, null=True, verbose_name='播放量')),
                ('reply', models.BigIntegerField(blank=True, null=True, verbose_name='评论量')),
                ('favorite', models.BigIntegerField(blank=True, null=True, verbose_name='收藏量')),
                ('danmaku', models.BigIntegerField(blank=True, null=True, verbose_name='弹幕量')),
                ('coin', models.BigIntegerField(blank=True, null=True, verbose_name='投币量')),
                ('share', models.BigIntegerField(blank=True, null=True, verbose_name='转发量')),
                ('his_rank', models.BigIntegerField(blank=True, null=True, verbose_name='笔记量')),
                ('like', models.BigIntegerField(blank=True, null=True, verbose_name='点赞量')),
                ('ctime', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('pubdate', models.DateTimeField(blank=True, null=True, verbose_name='更新时间')),
                ('pub_location', models.CharField(blank=True, max_length=128, null=True, verbose_name='地址')),
                ('title', models.CharField(blank=True, max_length=512, null=True, verbose_name='标题')),
                ('tname', models.CharField(blank=True, max_length=512, null=True, verbose_name='分类')),
                ('owner_name', models.CharField(blank=True, max_length=512, null=True, verbose_name='up主名称')),
                ('desc', models.CharField(blank=True, max_length=1024, null=True, verbose_name='描述')),
                ('bvid', models.CharField(blank=True, max_length=1024, null=True, verbose_name='BVID')),
                ('category', models.CharField(blank=True, max_length=1024, null=True, verbose_name='分类')),
            ],
            options={
                'verbose_name': '综合热门',
                'verbose_name_plural': '综合热门',
                'db_table': 'hot_list',
            },
        ),
        migrations.CreateModel(
            name='SpiderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.TimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.TimeField(auto_now_add=True, verbose_name='更新时间')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='创建日期')),
                ('update_date', models.DateField(auto_now_add=True, verbose_name='更新日期')),
                ('create_user', models.BigIntegerField(blank=True, help_text='创建者ID', null=True, verbose_name='创建者')),
                ('spider_name', models.CharField(max_length=128, verbose_name='爬虫名称')),
                ('spider_states', models.BooleanField(default=False, verbose_name='爬虫状态')),
                ('spider_field', models.CharField(choices=[('hot_list', '综合热门'), ('All', '全部'), ('Bangumi', '番剧'), ('GuochuanAnime', '国产动画'), ('Guochuang', '国创相关'), ('Documentary', '纪录片'), ('Douga', '动画'), ('Music', '音乐'), ('Dance', '舞蹈'), ('Game', '游戏'), ('Knowledge', '知识'), ('Technology', '科技'), ('Sports', '运动'), ('Car', '汽车'), ('Life', '生活'), ('Food', '美食'), ('Animal', '动物圈'), ('Kitchen', '鬼畜'), ('Fashion', '时尚'), ('Ent', '娱乐'), ('Cinephile', '影视'), ('Movie', '电影'), ('TV', '电视剧'), ('Variety', '综艺'), ('Original', '原创'), ('Rookie', '新人')], max_length=128, verbose_name='关键字')),
                ('spider_page', models.IntegerField(blank=True, null=True, verbose_name='爬取页数')),
            ],
            options={
                'verbose_name': '爬虫表',
                'verbose_name_plural': '爬虫表',
                'db_table': 'spider',
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.IntegerField(default='13888888888', verbose_name='手机号码')),
                ('gender', models.IntegerField(choices=[(0, '女'), (1, '男'), (3, '保密')], default=3, verbose_name='性别')),
                ('address', models.CharField(blank=True, max_length=128, null=True, verbose_name='地址')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '基础用户',
                'verbose_name_plural': '基础用户',
                'db_table': 'base_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('create_time', models.TimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.TimeField(auto_now_add=True, verbose_name='更新时间')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='创建日期')),
                ('update_date', models.DateField(auto_now_add=True, verbose_name='更新日期')),
                ('create_user', models.BigIntegerField(blank=True, help_text='创建者ID', null=True, verbose_name='创建者')),
                ('r_pid', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='评论ID')),
                ('mid', models.BigIntegerField(blank=True, null=True, verbose_name='用户ID')),
                ('location', models.CharField(default='无', max_length=128, verbose_name='地区')),
                ('content', models.CharField(blank=True, max_length=512, null=True, verbose_name='评论内容')),
                ('referenceTime', models.DateTimeField(blank=True, null=True, verbose_name='评论时间')),
                ('referenceName', models.CharField(blank=True, max_length=128, null=True, verbose_name='评论名称')),
                ('referenceSex', models.CharField(blank=True, max_length=128, null=True, verbose_name='评分')),
                ('aid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.hotlistmodel', verbose_name='爬虫ID')),
            ],
            options={
                'verbose_name': '评论表',
                'verbose_name_plural': '评论表',
                'db_table': 'comment',
            },
        ),
        migrations.AddField(
            model_name='hotlistmodel',
            name='spider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.spidermodel', verbose_name='爬虫ID'),
        ),
    ]
